# LeetCode 053
class Solution:
    def maxSubArray(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        # F(i) = max sum of subarray ending with nums[i]
        # F(i) = F(i - 1) + nums[i] if F(i - 1) > 0
        #      = nums[i] if F(i - 1) <= 0
        # Dynamic Programming
        # 非常简单的动态规划题目 学习掌握这种思维方式
        

        F, max_sum = 0, nums[0]
        for num in nums:
            if F <= 0:
                F = num
            else:
                F += num
            if F > max_sum:
                max_sum = F
        return max_sum


print(Solution().maxSubArray([-2, 1, -3, 4, -1, 2, 1, -5, 4]))
