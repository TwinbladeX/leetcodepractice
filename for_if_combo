# LeetCode 661
class Solution:
    def imageSmoother(self, M):
        """
        :type M: List[List[int]]
        :rtype: List[List[int]]
        """
        row, column = len(M), len(M[0])
        N = [[0 for _ in range(column)] for _ in range(row)]
        for i in range(row):
            for j in range(column):
            ##################################################################
                surrounding = [M[x][y]
                               for x in [i - 1, i, i + 1] if 0 <= x < row
                               for y in [j - 1, j, j + 1] if 0 <= y < column]
            ##################################################################                   
                N[i][j] = sum(surrounding) // len(surrounding)
        return N


print(Solution().imageSmoother([[1, 8, 100], [255, 250, 1], [0, 200, 128], [1, 1, 1]]))
